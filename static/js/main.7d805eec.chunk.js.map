{"version":3,"sources":["Redactor.js","DropedElement.js","DropedList.js","App.js","index.js"],"names":["Redactor","state","redacted","focused","redact","text","react_default","a","createElement","cols","rows","onBlur","e","_this","props","changeRedact","path","currentTarget","value","setState","defaultValue","className","ref","onClick","style","cursor","this","Component","DropedElement","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","opened","isObject","insertParam","src_DropedList","data","src_Redactor","openClose","createIndicator","String","fromCharCode","name","DropedList","createList","list","keys","map","key","i","src_DropedElement","YearCategoryElement","React","laureates","year","category","App","_this3","prizes","yearForFilter","categoryForFilter","printParam","param","console","log","Filter","filter","d","getUniquePropertyFromObj","listOfObjects","property","obj","reduce","newArray","element","includes","push","getData","url","fetch","then","response","JSON","parse","getLinkFromStringPath","link","string","holder","split","setValue","paths","length","stringPath","newState","objectSpread","bind","assertThisInitialized","saveData","newBlob","Blob","type","URL","createObjectURL","refs","download","href","innerHTML","changeShowedInfo","_this4","input","stringify","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7d805eec.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Redactor extends Component {\n\n    state = {\n        redacted: false,\n        focused: false,\n    };\n\n    redact = (text) => <textarea\n        cols={100}\n        rows={5}\n        onBlur={(e)=>{\n            this.props.changeRedact(this.props.path, e.currentTarget.value);\n            this.setState({redacted: !this.state.redacted});\n        }}\n        defaultValue={text}\n        className={'redactor'}\n        ref={'redactor'}/>;\n\n    onClick = () => {\n        this.setState({redacted: true})\n    };\n\n\n\n    render() {\n        return (\n            <div style={{'cursor': 'pointer'}} onClick={this.onClick}>\n                {this.state.redacted ? this.redact(this.props.value) : this.props.value}\n            </div>\n        );\n    }\n}\n\nexport default Redactor;","import React, {Component} from 'react';\nimport DropedList from './DropedList';\nimport Redactor from './Redactor';\n\nclass DropedElement extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    state = {\n        opened: true\n    };\n\n    isObject = ( value ) => typeof value === 'object';\n\n    insertParam = () => this.isObject(this.props.value) ? <DropedList data={this.props.value} path={this.props.path} changeRedact={this.props.changeRedact}/> : <Redactor value={this.props.value}\n                                                                                                                                   path={this.props.path} changeRedact={this.props.changeRedact}/>\n\n    openClose = () => this.setState({opened: !this.state.opened})\n\n    createIndicator = () => this.isObject(this.props.value) ? this.state.opened ? String.fromCharCode(9650) : String.fromCharCode(9660 ) : null\n\n    render() {\n        return (\n            <div className={'element'} >\n                <div className={'indicator'} onClick={this.openClose}>{this.createIndicator()}</div>\n                <div className={'name'}>{this.props.name}:</div>\n                <div className={'value'}>{this.state.opened ? this.insertParam() : \"{...}\"}</div>\n            </div>\n        );\n    }\n}\n\nexport default DropedElement;","import React, {Component} from 'react';\nimport DropedElement from \"./DropedElement\";\n\n\nclass DropedList extends Component {\n    constructor(props) {\n        super(props);\n        this.path = props.path;\n        this.state = {\n            opened: true\n        }\n    }\n\n    openClose = () => this.setState({opened: !this.state.opened});\n\n    createList = (list) => Object.keys(list).map((key, i)=>{\n        return <DropedElement name={key} value={list[key]} path={this.props.path +'.'+ key} changeRedact={this.props.changeRedact}/>\n    });\n\n\n    render() {\n        return (\n            <div className={'dropedList'}>\n                {this.createList(this.props.data)}\n            </div>\n        );\n    }\n}\n\nexport default DropedList;","import React from 'react'\nimport './index.css'\nimport DropedList from \"./DropedList\"\n\n\nclass Selection extends React.Component {\n\n    createOptionElementsFromList( optionsList ){\n        return optionsList.map( ( option, i ) => <option value={option} key={i}>{option}</option> )\n    }\n\n    render(){\n        return(\n            <div className={\"Selection \"}>\n                <select onChange={this.props.onChange}>\n                    <option defaultValue={\"All\"}>All</option>\n                    { this.createOptionElementsFromList( this.props.options ) };\n                </select>\n            </div>\n        )\n    }\n}\n\nclass YearCategoryElement extends React.Component {\n\n    render(){\n        return(\n            <div className=\"YearCategoryElement\" onClick={()=>this.props.onClick(this.props.laureates)}>\n                <div className=\"Year\" >{this.props.year}</div>\n                <div className='Category'>{this.props.category}</div>\n            </div>\n        )\n    }\n}\n\nclass ListOfYearCategoryElements extends React.Component {\n\n    render(){\n        let listOfYearAndCategoryElements = this.props.prizes.map( (d, i) => <YearCategoryElement {...d} onClick={this.props.onClick} key={i}/>);\n        return (\n            <div className=\"listOfYearCategoryElements\">\n                {listOfYearAndCategoryElements}\n            </div>\n        );\n    }\n}\n\nlet ListOfLaureates = ( data ) => {\n\n    return (\n        <div>\n            <div>\n                {data.laureates.map( (d, i) => {\n                    return(\n                        <div className='laureat' key={i}>\n                            <div className='name'>\n                                <div className=\"firstname\">{d.firstname}</div>\n                                <div className=\"surname\">{d.surname}</div>\n                            </div>\n                            <div className=\"motivation\">{d.motivation}</div>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n};\n\nclass App extends React.Component {\n\n    constructor(props){\n\n        super(props);\n        this.changeShowedInfo = (laureates ) => this.setState({laureates: laureates});\n    }\n\n    state = {\n        data: {},\n        prizes: this.props.prizes,\n        laureates: this.props.prizes[0].laureates,\n        yearForFilter: \"All\",\n        categoryForFilter: \"All\",\n\n    };\n\n    printParam = (param) => console.log(param);\n\n    Filter = ( prizes, year, category) => {\n        return prizes.filter( d => year === \"All\" ? true : d.year === year )\n            .filter( d => category === \"All\" ? true : d.category === category )\n    };\n\n    getUniquePropertyFromObj = ( listOfObjects, property ) => {\n       return listOfObjects\n           .map( obj => obj[property])\n           .reduce( (newArray, element) => {\n              if( !newArray.includes( element) ){\n                  newArray.push( element )\n              }\n              return newArray\n           }, [])\n    };\n\n    getData = (url) => fetch(url).then(response => response.text()).then( text=>this.setState({data: JSON.parse(text)}))\n\n    getLinkFromStringPath = (link, string) => {\n        let holder = link;\n        string.split('.').map((key) => {\n            holder = holder[key]\n        });\n        return holder;\n    };\n\n    setValue = ( obj, path, value) => {\n        let paths = path.split('.');\n        let holder = obj;\n        for (let i = 1; i < paths.length-1; i++) {\n            holder = holder[paths[i]]\n        }\n        holder[paths[paths.length-1]] = value;\n    };\n\n    changeRedact = ((stringPath, value) => {\n        let newState = {...this.state.data};\n        this.setValue(newState, stringPath, value);\n        this.setState({data: newState})\n\n    }).bind(this);\n\n    saveData = ( data ) =>{\n        let newBlob = new Blob([data], {type: 'text/json'});\n        let url = URL.createObjectURL( newBlob );\n        this.refs.download.href = url;\n        this.refs.download.download = 'newJson.json';\n        this.refs.download.innerHTML= 'Download'\n    }\n    render(){\n\n        let listOfUniqueYear = this.getUniquePropertyFromObj(this.props.prizes, 'year');\n        let listOfUciqueCategory = this.getUniquePropertyFromObj(this.props.prizes, 'category');\n        let filteredPrizes = this.Filter(this.state.prizes, this.state.yearForFilter, this.state.categoryForFilter);\n        return (\n            <div className=\"App\">\n                <div className=\"header\">\n                    <input className={'input'} type={'text'} ref={'input'} defaultValue={\"https://raw.githubusercontent.com/adrpadua/5e-database/master/5e-SRD-Ability-Scores.json\"}></input>\n                    <button onClick={()=>this.getData(this.refs.input.value)}>get data</button>\n                    <button onClick={()=>this.saveData(JSON.stringify(this.state.data))}>save data</button>\n                    <a ref={'download'}></a>\n\n                    {/*<div className={'filters'}>*/}\n                    {/*    <div>filters</div>*/}\n                    {/*    <Selection options={ listOfUniqueYear }*/}\n                    {/*               onChange={(e)=> this.setState({yearForFilter: e.target.value})}/>*/}\n                    {/*    <Selection options={ listOfUciqueCategory }*/}\n                    {/*                onChange={(e)=>this.setState( {categoryForFilter: e.target.value})*/}\n                    {/*                }/>*/}\n                    {/*</div>*/}\n                </div>\n                <div className=\"Laureates\">\n                    <DropedList data={this.state.data}\n                                path={'data'}\n                                changeRedact={this.changeRedact}/>\n                    {/*<ListOfYearCategoryElements prizes={ filteredPrizes }*/}\n                    {/*                            onClick={( laureates ) => this.changeShowedInfo( laureates )}/>*/}\n\n                    {/*<div className=\"TableInfo\">*/}\n                    {/*    <h1 className={'title'}>Лауреаты Нобелевской премии</h1>*/}\n                    {/*    <div>*/}\n                    {/*        <ListOfLaureates laureates={this.state.laureates}/>*/}\n                    {/*    </div>*/}\n                    {/*</div>*/}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\nimport prizes from '../src/prizes.json'\n\nReactDOM.render(<App {...prizes}/>, document.getElementById('root'));\n"],"sourceRoot":""}